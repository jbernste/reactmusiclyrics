{"ast":null,"code":"var _jsxFileName = \"/Users/getrude/Documents/GitHub/reactfindlyrics/src/components/tracks/Tracks.js\";\nimport React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Track from '../tracks/Track';\n\nclass Tracks extends Component {\n  render() {\n    return React.createElement(Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, value => {\n      const result = value.result,\n            heading = value.heading;\n\n      if (result === undefined || result.length === 0) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"text-center mb-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, heading), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, result.map(item => React.createElement(Track, {\n          key: item.id_track,\n          id: item.id_track,\n          id_album: item.id_album,\n          id_artist: item.id_artist,\n          track: item.track,\n          album: item.album,\n          artist: item.artist,\n          cover: item.cover,\n          lyrics: item.api_lyrics,\n          haslyrics: item.haslyr,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }))));\n      }\n    });\n  }\n\n}\n\nexport default Tracks;","map":{"version":3,"sources":["/Users/getrude/Documents/GitHub/reactfindlyrics/src/components/tracks/Tracks.js"],"names":["React","Component","Consumer","Spinner","Track","Tracks","render","value","result","heading","undefined","length","map","item","id_track","id_album","id_artist","track","album","artist","cover","api_lyrics","haslyr"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC3BK,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCC,KAAK,IAAI;AAAA,YACEC,MADF,GACsBD,KADtB,CACEC,MADF;AAAA,YACUC,OADV,GACsBF,KADtB,CACUE,OADV;;AAEN,UAAGD,MAAM,KAAKE,SAAX,IAAwBF,MAAM,CAACG,MAAP,KAAkB,CAA7C,EAAgD;AAC5C,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,OAHD,MAGO;AACH,eACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCF,OAAlC,CADJ,EAEA;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,MAAM,CAACI,GAAP,CAAWC,IAAI,IACZ,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAIA,IAAI,CAACC,QAAnB;AAA6B,UAAA,EAAE,EAAED,IAAI,CAACC,QAAtC;AAAgD,UAAA,QAAQ,EAAED,IAAI,CAACE,QAA/D;AAAyE,UAAA,SAAS,EAAEF,IAAI,CAACG,SAAzF;AAAoG,UAAA,KAAK,EAAEH,IAAI,CAACI,KAAhH;AAAuH,UAAA,KAAK,EAAEJ,IAAI,CAACK,KAAnI;AAA0I,UAAA,MAAM,EAAEL,IAAI,CAACM,MAAvJ;AAA+J,UAAA,KAAK,EAAEN,IAAI,CAACO,KAA3K;AAAkL,UAAA,MAAM,EAAEP,IAAI,CAACQ,UAA/L;AAA2M,UAAA,SAAS,EAAER,IAAI,CAACS,MAA3N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH,CADL,CAFA,CADJ;AAWH;AACJ,KAnBD,CADJ;AAuBH;;AAzB0B;;AA2B/B,eAAejB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Track from '../tracks/Track';\n\nclass Tracks extends Component {\n    render() {\n        return (\n            <Consumer>\n            {value => {\n                const { result, heading } = value;\n                if(result === undefined || result.length === 0) {\n                    return <Spinner />;\n\n                } else {\n                    return (\n                        <React.Fragment>\n                            <h3 className=\"text-center mb-4\">{heading}</h3>\n                        <div className=\"row\">\n                            {result.map(item => (\n                                <Track key = {item.id_track} id={item.id_track} id_album={item.id_album} id_artist={item.id_artist} track={item.track} album={item.album} artist={item.artist} cover={item.cover} lyrics={item.api_lyrics} haslyrics={item.haslyr} />\n                                \n                        ))}\n                        </div>\n                        </React.Fragment>\n                    ); \n                }\n            }}\n            </Consumer>\n        );\n    }\n}\nexport default Tracks;"]},"metadata":{},"sourceType":"module"}