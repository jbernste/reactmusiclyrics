{"ast":null,"code":"var _jsxFileName = \"/Users/getrude/Documents/GitHub/reactfindlyrics/src/components/tracks/Track.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Track = props => {\n  const track = props.track;\n\n  if (`{props.nlyrics}` === 'false') {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \" no lyrics\");\n  } else {\n    return React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card mb-4 shadow-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \" Track: \\\"\", track, \"\\\"\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-music\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \" Artist:\"), \"  \", props.artist), React.createElement(\"img\", {\n      src: props.cover,\n      width: \"150\",\n      alt: \"album cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-stop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" Album:\"), \" \", props.album), React.createElement(Link, {\n      to: `artists/${props.id_artist}/albums/${props.id_album}/tracks/${props.id}/lyrics`,\n      className: \"btn btn-dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" View Lyrics\"))));\n  }\n};\n\nexport default Track;","map":{"version":3,"sources":["/Users/getrude/Documents/GitHub/reactfindlyrics/src/components/tracks/Track.js"],"names":["React","Link","Track","props","track","artist","cover","album","id_artist","id_album","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAsB,kBAAtB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA,QACbC,KADa,GACHD,KADG,CACbC,KADa;;AAKrB,MAAI,iBAAD,KAAsB,OAAzB,EAAkC;AAC9B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,GAJD,MAIO;AACP,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAG8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBA,KAAlB,OAH9B,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,EAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlC,QAA8DD,KAAK,CAACE,MAApE,CALJ,EASI;AAAK,MAAA,GAAG,EAAEF,KAAK,CAACG,KAAhB;AAAuB,MAAA,KAAK,EAAC,KAA7B;AAAmC,MAAA,GAAG,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,EAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjC,OAA2DH,KAAK,CAACI,KAAjE,CAXJ,EAaG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAUJ,KAAK,CAACK,SAAU,WAAUL,KAAK,CAACM,QAAS,WAAUN,KAAK,CAACO,EAAG,SAAjF;AACA,MAAA,SAAS,EAAC,wBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbH,CADJ,CADJ,CADJ;AAuBH;AACA,CAlCD;;AAmCA,eAAeR,KAAf","sourcesContent":["import React from 'react';\nimport { Link }  from 'react-router-dom';\n\nconst Track = (props) => {\n    const { track } = props;\n    \n    \n    \n    if(`{props.nlyrics}` === 'false') {\n        return (\n            <h1> no lyrics</h1>\n        )\n    } else {\n    return (\n        <div className=\"col-md-6\">\n            <div className=\"card mb-4 shadow-sm\">\n                <div className =\"card-body\">\n                    <p className=\"card-text\">\n                    \n                   \n                    <i className=\"fa fa-play\"></i><strong> Track: \"{track}\"</strong></p> \n                    <p><i className=\"fa fa-music\"></i><strong> Artist:</strong>  {props.artist}\n                    \n                    </p>\n                    \n                    <img src={props.cover} width='150' alt='album cover'></img>\n                    <p></p>\n                    <p><i className=\"fa fa-stop\"></i><strong> Album:</strong> {props.album}</p>\n\n                   <Link to={`artists/${props.id_artist}/albums/${props.id_album}/tracks/${props.id}/lyrics`}\n                   className=\"btn btn-dark btn-block\"> View Lyrics</Link>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n}\nexport default Track;"]},"metadata":{},"sourceType":"module"}